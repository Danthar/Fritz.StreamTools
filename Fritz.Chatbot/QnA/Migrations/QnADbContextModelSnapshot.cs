// <auto-generated />
using System;
using Fritz.Chatbot.QnA.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Fritz.Chatbot.QnA.Migrations
{
    [DbContext(typeof(QnADbContext))]
    partial class QnADbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Fritz.Chatbot.QnA.Data.AlternateQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("character varying(280)")
                        .HasMaxLength(280);

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("AlternateQuestion");
                });

            modelBuilder.Entity("Fritz.Chatbot.QnA.Data.QnAPair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AnswerText")
                        .IsRequired()
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("character varying(280)")
                        .HasMaxLength(280);

                    b.HasKey("Id");

                    b.ToTable("QnAPairs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnswerText = "Jeff speaks English, with a Mid-Atlantic / Philadelphia accent.",
                            QuestionText = "What language is Jeff speaking?"
                        },
                        new
                        {
                            Id = 2,
                            AnswerText = "Jeff typically uses Visual Studio 2019 Enterprise edition available at visualstudio.com, and sometimes uses Visual Studio Code from code.visualstudio.com",
                            QuestionText = "What editor does Jeff use?"
                        },
                        new
                        {
                            Id = 3,
                            AnswerText = "Jeff uses the Visual Studio Enterprise Edition, in preview mode. The preview is ALWAYS free to try: www.visualstudio.com / vs / preview /",
                            QuestionText = "Which VS version do you use?"
                        },
                        new
                        {
                            Id = 4,
                            AnswerText = "The music comes from Carl Franklin's Music to Code By at http://mtcb.pwop.com and can also be found on the mobile app Music To Flow By that you can get at http://musictoflowby.com",
                            QuestionText = "What music is playing?"
                        },
                        new
                        {
                            Id = 5,
                            AnswerText = "Jeff typically writes code in C# with ASP.NET Core. You will also find him regularly writing JavaScript, TypeScript, CSS, and HTML.",
                            QuestionText = "What language is Jeff coding in?"
                        },
                        new
                        {
                            Id = 6,
                            AnswerText = "Powershell with the posh-git plugin from dahlbyk / posh - git gives extra insight into Git repositories. Information on the prompt and tab-completion of git commands are just some of the cool features of posh-git.",
                            QuestionText = "Why does Jeff use Powershell to work with Git?"
                        },
                        new
                        {
                            Id = 7,
                            AnswerText = "No one knows the real answer to this question, because his wife keeps discarding a different one each month and doesn't tell him. Just ask about his Philly.NET hat...",
                            QuestionText = "How many hats does Jeff own?"
                        },
                        new
                        {
                            Id = 8,
                            AnswerText = "Jeff blogs at: www.jeffreyfritz.com",
                            QuestionText = "Where can I find Jeff's blog?"
                        },
                        new
                        {
                            Id = 9,
                            AnswerText = "You can find the source code shared on stream at @csharpfritz",
                            QuestionText = "Where is Jeff's GitHub?"
                        },
                        new
                        {
                            Id = 10,
                            AnswerText = "Jeff has videos on WintellectNow -http://wintellectnow.com",
                            QuestionText = "Where can I find training videos from Jeff?"
                        },
                        new
                        {
                            Id = 11,
                            AnswerText = "All of Jeff's live stream videos are archived on YouTube at: youtube.com/csharpfritz",
                            QuestionText = "Where can I catch Fritz videos?"
                        },
                        new
                        {
                            Id = 12,
                            AnswerText = "The workshop is at youtube.com/watch?v=--lYHxrsLsc",
                            QuestionText = "Where can I watch the 8 - hour ASP.NET Core workshop?"
                        },
                        new
                        {
                            Id = 13,
                            AnswerText = "Jeff broadcasts with a Dell Precision Tower 3620 that has a Geforce GTX 1060 video card",
                            QuestionText = "What is the machine you are using?"
                        },
                        new
                        {
                            Id = 14,
                            AnswerText = "Jeff streams regularly on Tuesday, Wednesday, Thursday, Friday, and Sunday at 10am ET.",
                            QuestionText = "When does Jeff stream?"
                        },
                        new
                        {
                            Id = 15,
                            AnswerText = "The C# workshop is available as a playlist on YouTube at: youtube.com/watch?v=9ZmZuUSqQUM&list=PLVMqA0_8O85zIiU-T5h6rn8ortqEUNCeK",
                            QuestionText = "Where can I watch the C# workshop?"
                        },
                        new
                        {
                            Id = 16,
                            AnswerText = "The architecture workshop is available as a playlist on YouTube at: youtube.com/watch?v=k8cZUW4MS3I&list=PLVMqA0_8O85x-aurj1KphxUeWTeTlYkGM",
                            QuestionText = "Where can I watch the Architecture workshop?"
                        },
                        new
                        {
                            Id = 17,
                            AnswerText = "That is Carnac from the Code52 project: Code52 / carnac",
                            QuestionText = "What tool displays your keystrokes?"
                        },
                        new
                        {
                            Id = 18,
                            AnswerText = "Madrinas is a sponsor of the Fritz and Friends channel.They make organic, free trade coffee that you can get from madrinascoffee.com.Use the coupon code 'FRITZ' for 20 % off your order.",
                            QuestionText = "What is Madrinas Coffee?"
                        },
                        new
                        {
                            Id = 19,
                            AnswerText = "The Live Coders is a Twitch stream team that Jeff founded and comprised of folks that write code and answer questions about technology.You can learn more about them at livecoders.dev",
                            QuestionText = "Who are the Live Coders?"
                        },
                        new
                        {
                            Id = 20,
                            AnswerText = "The first Live Coders Conference is April 9, 2020 starting at 9a ET / 6a PT / 1300 UTC.You can learn more at conf.livecoders.dev",
                            QuestionText = "When is the Live Coders Conference ?"
                        },
                        new
                        {
                            Id = 21,
                            AnswerText = "Jeff uses a Vortex Race 3 with Cherry MX Blue switches, details on his blog at: jeffreyfritz.com/2018/07/mechanical-keyboards-i-just-got-one-and-why-you-need-one-too",
                            QuestionText = "What keyboard are you using?"
                        });
                });

            modelBuilder.Entity("Fritz.Chatbot.QnA.Data.UnansweredQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("AskedDateStamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.ToTable("UnansweredQuestions");
                });

            modelBuilder.Entity("Fritz.Chatbot.QnA.Data.AlternateQuestion", b =>
                {
                    b.HasOne("Fritz.Chatbot.QnA.Data.QnAPair", "MainQuestion")
                        .WithMany("AlternateQuestions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
